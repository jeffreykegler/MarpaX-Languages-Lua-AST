# extend
	general lexing
	
# fmt
	# ast traversal
		distill
			flatten left recursion
				statements
				*list

# highlights
	extensible parser
	traversable Lua AST

# check for ambiguity

# find a job for lua parser
	help port lua 5.1 code to lua 5.2 -- What Lua 5.1 code breaks in Lua 5.2
	http://www.luafaq.org/#T8.1

# More parser tests:
http://lua-users.org/wiki/LuaGrammar

# Lua Links
# ---------

# lua formatters/ast emitters
http://metalua.luaforge.net/
http://lua-users.org/wiki/LuaInspect
https://github.com/batrick/lunadry # most recent
http://codepad.org/vRQx1O8A # block/non-block keywords
http://lua-users.org/wiki/SourceCodeFormatter
https://github.com/LuaDist/luapretty/blob/master/src/lua-formatter.lua
http://notebook.kulchenko.com/programming/lua-beautifier-in-55-lines-of-perl

# style guides
http://lua-users.org/wiki/LuaStyleGuide
http://sputnik.freewisdom.org/en/Coding_Standard

# testing framework
http://olivinelabs.com/busted/
# code optimizer
http://lua-users.org/wiki/SourceOptimizer

# Lua IDE
http://studio.zerobrane.com/

# AST-based formatter/linter
	subtle comma (Kolesnikov)

# Questions to be asked when enough tests will pass
# -------------------------------------------------

#
# How to/If we need to interpret these escape sequences (2.1 – Lexical Conventions) 
#
    <double quoted String char> ~ <C escape sequence>
    <double quoted String char> ~ <escape sequence of decimal digits>

    <single quoted String char> ~ <C escape sequence>
    <single quoted String char> ~ <escape sequence of decimal digits>

    <C escape sequence> ~ '\a' # bell
    <C escape sequence> ~ '\b' # backspace
    <C escape sequence> ~ '\f' # form feed
    <C escape sequence> ~ '\n' # newline
    <C escape sequence> ~ '\r' # carriage return
    <C escape sequence> ~ '\t' # horizontal tab
    <C escape sequence> ~ '\v' # vertical tab
    <C escape sequence> ~ '\\' # backslash
		\"	double quote #"
		\'	single quote #'
		\[	left square bracket
		\]	right square bracket
   
    
Links
-----

https://github.com/jddurand/MarpaX-Languages-C-AST/blob/master/lib/MarpaX/Languages/C/AST/Grammar/ISO_ANSI_C_2011.pm
https://github.com/jeffreykegler/Marpa--R2/blob/master/cpan/lib/Marpa/R2/meta/metag.bnf
